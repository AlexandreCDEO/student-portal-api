generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Empresa {
  empresaId                    Int                            @id @default(dbgenerated("nextval('empresaid'::regclass)")) @map("empresaid")
  empresaCnpj                  String                         @db.VarChar(14) @map("empresacnpj")
  empresaNome                  String                         @db.VarChar(256) @map("empresanome")
  empresaNomeFantasia          String                         @db.VarChar(40) @map("empresanomefantasia")
  empresaTemaId                Int?                           @db.SmallInt @map("empresatemaid")
  empresaAmbiente              Int?                           @db.SmallInt @map("empresaambiente")
  empresaAtivo                 Boolean                        @map("empresaativo")
  empNom                       String?                        @db.Char(15) @map("empnom")
  empRzo                       String?                        @db.Char(40) @map("emprzo")
  empresaCodInep               Int?                        @map("empresacodinep")

  secretariasArredondamento    SecretariaArredondamento[]
  matriculas                   Matricula[] 
  areasConhecimento            AreaConhecimento[]
  cursos                       Curso[]
  turmas                       Turma[] 
  matrizesCurriculares         MatrizCurricular[]
  periodosEscolares            PeriodoEscolar[]
  turnos                       Turno[]
  participantes                Participante[]
  participanteFiliais          ParticipanteFilial[]
  cargos                       Cargo[]
  departamentos                Departamento[]
  politicasSeguranca           PolSegNro[]
  matriculaPeriodoEscolares    MatriculaPeriodoEscolar[]
  grupoEmpresaEmpresas         GrupoEmpresaEmpresa[]
  secParticipantes             SecParticipante[]
  participanteFiliaisEndereco  ParticipanteFilialEndereco[]
  participantesfiliaisEnderecosContatosEletronicos ParticipanteFilialEnderecoContatoEletronico[]
  relacionamentos              Relacionamento[]
  participantesFiliaisEnderecosContatosTelefone ParticipanteFilialEnderecoContatoTelefone[]
  relacoes                     ParticipanteRelacao[] @relation("empresaRelacao1")
  empresaRelacoes              ParticipanteRelacao[] @relation("empresaRelacao2")
  disciplinas                  Disciplina[]
  matriculaDisciplinas         MatriculaDisciplina[] 
  matrizesCurricularesPeriodos MatrizCurricularPeriodo[]
  matrizesCurricularesPeriodosDisciplinas MatrizCurricularPeriodoDisciplina[]
  frequencia                  MatriculaDisciplinaFrequencia[]
  @@map("empresa")
}

model Participante {
  participanteCodigo           Int                         @map("participantecodigo")
  participanteTipoPessoa       String?                        @db.Char(1) @map("participantetipopessoa")
  participanteRazaoSocial      String?                        @db.Char(50) @map("participanterazaosocial")
  participanteDataCadastro     DateTime?                      @db.Date @map("participantedatacadastro")
  participanteUsuarioLog       String?                        @db.Char(15) @map("participanteusuariolog")
  participantePgmLog           String?                        @db.Char(128) @map("participantepgmlog")
  participanteDataLog          DateTime?                      @db.Timestamp(6) @map("participantedatalog")
  participanteStatus           Boolean?                       @map("participantestatus")

  empresa                      Empresa @relation(fields: [empresaId], references: [empresaId])
  empresaId                    Int                            @map("empresaid")

  matrizCurricularAtivacao     MatrizCurricular[] @relation("ParticipanteAtivacao")
  matrizCurricularDesativacao  MatrizCurricular[] @relation("ParticipanteDesativacao")

  participanteFiliais          ParticipanteFilial[]

  users                        SecParticipante[]

  @@id([empresaId, participanteCodigo])
  @@map("participante")
}

model Muncadf {
  mufCod                     Int                          @id @map("mufcod")
  mufDsc                     String?                      @db.Char(50) @map("mufdsc")
  estCod                     String?                      @db.Char(2) @map("estcod")
  mufSts                     String?                      @db.Char(1) @map("mufsts")
  mufUsuCod                  String?                      @db.Char(15) @map("mufusucod")
  dddCod                     Int?                         @db.SmallInt @map("dddcod")
  mufCodDne                  Int?                         @map("mufcoddne")
  mufCodGia                  Int?                         @map("mufcodgia")

  participanteFiliais        ParticipanteFilial[]
  enderecos                  ParticipanteFilialEndereco[]

  @@map("muncadf")
}

model OrgaoExpedidor {
  orgaoExpedidorId    Int                  @id @map("orgaoexpedidorid")
  orgaoExpedidorSigla String               @db.VarChar(8) @map("orgaoexpedidorsigla")
  orgaoExpedidorNome  String               @db.VarChar(128) @map("orgaoexpedidornome")
  orgaoExpedidorTipo  Int                  @map("orgaoexpedidortipo")

  participanteFiliais  ParticipanteFilial[]

  @@index([orgaoExpedidorNome], map: "idx_orgaoexpedidornome")
  @@index([orgaoExpedidorSigla], map: "idx_orgaoexpedidorsigla")

  @@map("orgaoexpedidor")
}

model Departamento {
  departamentoCodigo          Int                            @map("departamentocodigo")
  departamentoNome            String?   @db.VarChar(60)      @map("departamentonome")
  departamentoSuperiorCodigo  Int?                           @map("departamentosuperiorcodigo")
  departamentoGerente         Int?                           @map("departamentogerente")
  departamentoCodigoContabil  String?   @db.VarChar(60)      @map("departamentocodigocontabil")
  departamentoNomeContabil    String?   @db.VarChar(60)      @map("departamentonomecontabil")
  departamentoNivelContabil   String?   @db.VarChar(20)      @map("departamentonivelcontabil")
  departamentoControlaEstoque Boolean?                       @map("departamentocontrolaestoque")
  departamentoPgmLog          String?   @db.VarChar(128)     @map("departamentopgmlog")
  departamentoUsuCod          String?   @db.Char(15)         @map("departamentousucod")
  departamentoDtaLog          DateTime? @db.Timestamp(6)     @map("departamentodtalog")
  departamentoCodigoExterno   Int?                        @map("departamentocodigoexterno")
  departamentoAtivo           Boolean?                       @map("departamentoativo")

  empresa                     Empresa @relation(fields: [empresaId], references: [empresaId])
  empresaId                   Int                            @map("empresaid")

  cargos                      Cargo[]

  @@id([empresaId, departamentoCodigo])
  @@unique([empresaId, departamentoCodigoExterno], map: "uniquedepartamentocodigoexterno")
  @@map("departamento")
}

model Cargo {
  cargoCodigo            Int                            @map("cargocodigo")
  cargoNome              String?              @db.VarChar(60) @map("cargonome")
  cargoCbo               String?              @db.VarChar(60) @map("cargocbo")
  cargoPortaria          String?              @db.VarChar(60) @map("cargoportaria")
  cargoDescricao         String?              @db.VarChar(100) @map("cargodescricao")
  cargoResponsabilidades String?              @db.VarChar(100) @map("cargoresponsabilidades")

  cargoAtivo             Boolean?                       @map("cargoativo")
  cargoPgmLog            String?              @db.VarChar(128) @map("cargopgmlog")
  cargoUsuCod            String?              @db.Char(15) @map("cargousucod")
  cargoDtaLog            DateTime?            @db.Timestamp(6) @map("cargodtalog")
  cargoGerencia          Boolean?                       @map("cargogerencia")
  cargoCodigoExterno     Int?                        @map("cargocodigoexterno")

  empresa                Empresa @relation(fields: [empresaId], references: [empresaId])
  empresaId              Int                            @map("empresaid")

  departamento           Departamento? @relation(fields: [empresaId, departamentoCodigo], references: [empresaId, departamentoCodigo])
  departamentoCodigo     Int?                           @map("departamentocodigo")

  participanteFiliais    ParticipanteFilial[]

  @@id([empresaId, cargoCodigo])
  @@unique([empresaId, cargoNome], map: "ucargo")
  @@index([empresaId, departamentoCodigo], map: "icargo1")
  @@map("cargo")
}

model Genero {
  generoId            Int                  @id @default(autoincrement()) @db.SmallInt @map("generoid")
  generoNome          String?              @db.Char(50) @map("generonome")
  generoFlgAtivo      Boolean?                       @map("generoflgativo")
  generoOrientacaoFlg String?              @db.Char(1) @map("generoorientacaoflg")

  participanteFiliais ParticipanteFilial[]

  @@map("genero")
}

model ParticipanteFilial {
  participanteFilialCodigo                    Int                            @db.SmallInt @map("participantefilialcodigo")
  participanteNomeCompleto                    String?                        @db.VarChar(50) @map("participantenomecompleto")
  participanteFilialStatus                    Boolean?                       @map("participantefilialstatus")
  participanteFilialSexo                      String?                        @db.Char(1) @map("participantefilialsexo")
  participanteFilialNacionalidadePais         Int?                           @db.SmallInt @map("participantefilialnacionalidadepais")
  participanteFilialNacionalidade             String?                        @db.VarChar(50) @map("participantefilialnacionalidade")
  participanteFilialNacionalidadeUf           String?                        @db.Char(2) @map("participantefilialnacionalidadeuf")
  participanteFilialNacionalidadeEstrangeiro  String?                        @db.VarChar(60) @map("participantefilialnacionalidadeestrangeiro")
  participanteFilialNomeFantasia              String?                        @db.Char(50) @map("participantefilialnomefantasia")
  participanteFilialCnpj                      Int?                           @map("participantefilialcnpj")
  participanteFilialRg                        String?                        @db.VarChar(50) @map("participantefilialrg")
  participanteFilialRgUf                      String?                        @db.Char(3) @map("participantefilialrguf")
  participanteFilialDocumentoSubstituto       String?                        @db.VarChar(60) @map("participantefilialdocumentosubstituto")
  participanteFilialDocumentoSubstitutoId     String?                        @db.VarChar(60) @map("participantefilialdocumentosubstitutoid")
  participanteFilialNascimento                DateTime?                      @db.Date @map("participantefilialnascimento")
  participanteFilialDataConclusao             DateTime?                      @db.Date @map("participantefilialdataconclusao")
  participanteFilialQtdDiasPer                Int?                           @db.SmallInt @map("participantefilialqtddiasper")
  participanteFilialRegimeTributario          String?                        @db.Char(20) @map("participantefilialregimetributario")
  participanteFilialCodExterno                String?                        @db.Char(15) @map("participantefilialcodexterno")
  participanteFilialRetWs                     String?                        @db.VarChar(1024) @map("participantefilialretws")
  participanteFilialDataDy                    DateTime?                      @db.Timestamp(6) @map("participantefilialdatady")
  participanteFilialCustomerIdLinx            Int?                        @map("participantefilialcustomeridlinx")
  participanteFilialTransportadora            Int?                           @map("participantefilialtransportadora")
  participanteFilialGrupoContabil             Int?                           @db.SmallInt @map("participantefilialgrupocontabil")
  participanteFilialRegiaoGeografica          String?                        @db.Char(2) @map("participantefilialregiaogeografica")
  participanteFilialSubstituidoIcms           String?                        @db.Char(1) @map("participantefilialsubstituidoicms")
  participanteFilialGeraSpd                   String?                        @db.Char(1) @map("participantefilialgeraspd")
  participanteFilialTipo                      String?                        @db.VarChar(40) @map("participantefilialtipo")
  participanteFilialTerceiroCargo             String?                        @db.VarChar(60) @map("participantefilialterceirocargo")
  participanteFilialCodigoInep                String?                        @db.Char(8) @map("participantefilialcodigoinep")
  participanteFilialPgmLog                    String?                        @db.Char(128) @map("participantefilialpgmlog")
  participanteFilialUsuarioLog                String?                        @db.Char(15) @map("participantefilialusuariolog")
  participanteFilialDataLog                   DateTime?                      @db.Timestamp(6) @map("participantefilialdatalog")
  participanteFilialInscricaoEstadual         String?                        @db.Char(18) @map("participantefilialinscricaoestadual")
  participanteFilialCorRaca                   Int?                           @db.SmallInt @map("participantefilialcorraca")
  participanteFilialNomeSocial                String?                        @db.VarChar(100) @map("participantefilialnomesocial")

  empresa                                     Empresa @relation(fields: [empresaId], references: [empresaId])
  empresaId                                   Int                            @map("empresaid")

  participante                                Participante? @relation(fields: [empresaId, participanteCodigo], references: [empresaId, participanteCodigo])
  participanteCodigo                          Int                         @map("participantecodigo")

  municipio                                   Muncadf? @relation(fields: [participanteFilialNacionalidadeCodMunicipio], references: [mufCod])
  participanteFilialNacionalidadeCodMunicipio Int?                           @map("participantefilialnacionalidadecodmunicipio")

  orgaoExpedidor                              OrgaoExpedidor? @relation(fields: [participanteFilialRgOrgaoExpedidor], references: [orgaoExpedidorId])
  participanteFilialRgOrgaoExpedidor          Int?                           @db.SmallInt @map("participantefilialrgorgaoexpedidor")

  cargo                                       Cargo? @relation(fields: [participanteFilialCargoEmpresaId, participanteFilialCargoCodigo], references: [empresaId, cargoCodigo])
  participanteFilialCargoEmpresaId            Int?                           @map("participantefilialcargoempresaid")
  participanteFilialCargoCodigo               Int?                           @map("participantefilialcargocodigo")

  genero                                      Genero? @relation(fields: [generoId], references: [generoId])
  generoId                                    Int?                           @db.SmallInt @map("generoid")

  matriculas                                  Matricula[]

  enderecos                                   ParticipanteFilialEndereco[]

  participantesFiliaisEnderecosEletronicos    ParticipanteFilialEnderecoContatoEletronico[]

  relacionamentos                             Relacionamento[]

  participantesFiliaisEnderecosContatosTelefones   ParticipanteFilialEnderecoContatoTelefone[]

  participanteFilial                          ParticipanteRelacao[] @relation("ParticipanteRelacao1")
  participanteFilialRelacao                   ParticipanteRelacao[] @relation("ParticipanteRelacao2")

  @@id([empresaId, participanteCodigo, participanteFilialCodigo])
  @@map("participantefilial")
}

model SecUser {
  secUserId               Int                       @id @default(autoincrement()) @map("secuserid")
  secUserName             String                    @db.VarChar(100) @map("secusername")
  secUserPassword         String?                   @db.VarChar(100) @map("secuserpassword")
  secUserActive           Boolean?                  @map("secuseractive")
  secUserDataCadastro     DateTime?                 @db.Timestamp(6) @map("secuserdatacadastro")
  secUserSenhaProvisoria  Boolean?                  @map("secusersenhaprovisoria")
  secUserBloqueado        Boolean?                  @map("secuserbloqueado")
  secUserNameComp         String?                   @db.VarChar(100) @map("secusernamecomp")
  secUserEmail            String?                   @db.VarChar(100) @map("secuseremail")
  secUserStatus           String?                   @db.VarChar(1) @map("secuserstatus")

  participantes           SecParticipante[]
  historicoSenhas         SecUserPass[]

  @@map("secuser")
}

model Matricula {
  matriculaCodigo                              String                           @unique(map: "umatricula001") @db.Char(15) @map("matriculacodigo")
  matriculaSituacaoAcademica                   String?                          @db.Char(1) @map("matriculasituacaoacademica")
  matriculaIdPf                                String?                          @db.VarChar(40) @map("matriculaidpf")
  matriculaIdMoodle                            String?                          @db.VarChar(100) @map("matriculaidmoodle")
  matriculaSituacaoAluno                       Boolean?                         @map("matriculasituacaoaluno")
  matriculaDataCadastro                        DateTime?                        @db.Timestamp(6) @map("matriculadatacadastro")
  periodoEscolarId                             Int?                             @map("periodoescolarid")
  periodoEscolarAtualId                        Int?                             @map("periodoescolaratualid")

  empresa                                      Empresa @relation(fields: [empresaId], references: [empresaId])
  empresaId                                    Int                            @map("empresaid")

  curso                                        Curso? @relation(fields: [empresaId, cursoCodigo], references: [empresaId, cursoCodigo])
  cursoCodigo                                  Int?                        @map("cursocodigo")

  turma                                        Turma? @relation(fields: [empresaId, turmaCodigo, cursoCodigo], references: [empresaId, turmaCodigo, cursoCodigo])
  turmaCodigo                                  Int?                           @map("turmacodigo")

  participanteFilial                           ParticipanteFilial? @relation(fields: [empresaId, alunoParticipanteCod, alunoParticipanteFilialCod], references: [empresaId, participanteCodigo, participanteFilialCodigo])
  alunoParticipanteCod                         Int?                        @map("alunoparticipantecod")
  alunoParticipanteFilialCod                   Int?                           @db.SmallInt @map("alunoparticipantefilialcod")

  matriculaPeriodoEscolares                    MatriculaPeriodoEscolar[]

  matriculasdisciplinas                        MatriculaDisciplina[]

  frequencia                                   MatriculaDisciplinaFrequencia[]

  @@id([empresaId, matriculaCodigo])
  @@index([empresaId, turmaCodigo, cursoCodigo], map: "imatricula4")
  @@map("matricula")
}

model AreaConhecimento {
  areaConhecimentoCodigo    Int                            @map("areaconhecimentocodigo")
  areaConhecimentoNome      String?               @db.VarChar(60) @map("areaconhecimentonome")
  areaConhecimentoPrincipal Int?                           @map("areaconhecimentoprincipal")
  areaConhecimentoDescricao String?               @db.VarChar(100) @map("areaconhecimentodescricao")
  areaConhecimentoAtivo     Boolean?                       @map("areaconhecimentoativo")
  areaConhecimentoPgmLog    String?               @db.VarChar(128) @map("areaconhecimentopgmlog")
  areaConhecimentoUsuCod    String?               @db.Char(15) @map("areaconhecimentousucod")
  areaConhecimentoDtaLog    DateTime?             @db.Timestamp(6) @map("areaconhecimentodtalog")

  empresa                   Empresa @relation(fields: [empresaId], references: [empresaId])
  empresaId                 Int                            @map("empresaid")

  cursos                    Curso[] 

  @@id([empresaId, areaConhecimentoCodigo])
  @@unique([areaConhecimentoCodigo, empresaId])
  @@map("areaconhecimento")
}

model SecretariaArredondamento {
  secretariaArredondamentoId        Int                  @map("secretariaarredondamentoid")
  secretariaRangeMinMeio            Decimal? @db.Decimal(3, 2) @map("secretariarangeminmeio")
  secretariaRangeMaxMeio            Decimal? @db.Decimal(3, 2) @map("secretariarangemaxmeio")
  secretariaRangeMinInteiro         Decimal? @db.Decimal(3, 2) @map("secretariarangemininteiro")
  secretariaRangeMaxInteiro         Decimal? @db.Decimal(3, 2) @map("secretariarangemaxinteiro")
  secretariaArredondamentoDescricao String?  @db.VarChar(60) @map("secretariaarredondamentodescricao")

  empresa                           Empresa  @relation(fields: [empresaId], references: [empresaId])
  empresaId                         Int      @db.SmallInt @map("empresaid")

  cursos                            Curso[]

  @@id([empresaId, secretariaArredondamentoId])
  @@map("secretariaarredondamento")
}

model Curso {
  cursoCodigo                      Int                         @map("cursocodigo")
  cursoNome                        String?       @db.VarChar(150) @map("cursonome")
  cursoAtivo                       Boolean                        @map("cursoativo")
  cursoDocumentacaoNome            String?       @db.VarChar(150) @map("cursodocumentacaonome")
  cursoHabilitacao                 String?       @db.VarChar(60) @map("cursohabilitacao")
  cursoObjetivos                   String?                       @map("cursoobjetivos")
  cursoDescricao                   String?       @db.VarChar(2000) @map("cursodescricao")
  cursoPublicoAlvo                 String?                       @map("cursopublicoalvo")
  cursoPerfilEgresso               String?                       @map("cursoperfilegresso")
  cursoNivelEducacional            String?       @db.VarChar(40) @map("cursoniveleducacional")
  cursoTitulo                      String?       @db.VarChar(40) @map("cursotitulo")
  cursoModalidade                  String?       @db.VarChar(40) @map("cursomodalidade")
  cursoTitulacaoFormandoMasculino  String?       @db.VarChar(150) @map("cursotitulacaoformandomasculino")
  cursoTitulacaoFormandoFeminino   String?       @db.VarChar(150) @map("cursotitulacaoformandofeminino")
  cursoAutorizacao                 String?       @db.VarChar(150) @map("cursoautorizacao")
  cursoDataAutorizacao             DateTime?                     @map("cursodataautorizacao")
  cursoRegimeAprovacao             String?       @db.VarChar(40) @map("cursoregimeaprovacao")
  cursoRegime                      String?       @db.VarChar(40) @map("cursoregime")
  cursoIdInep                      Int?                        @map("cursoidinep")
  funcionarioCodigo                Int?                           @map("funcionariocodigo")
  cursoQtdDisciplinaOp             Int?                           @map("cursoqtddisciplinaop")
  cursoPercentualEvoAcaIngressoEnade Float?                        @map("cursopercentualevoacaingresenade")
  cursoPercentualEvoAcaConcluinteEnade Float?                      @map("cursopercentualevoacaconcluinteenade")
  cursoPrePosicao                  String?       @db.VarChar(20) @map("cursopreposicao")
  cursoCodigoInep                  String?       @db.Char(8) @map("cursocodigoinep")
  cursoDtaLog                      DateTime?                     @map("cursodtalog")
  cursoPgmLog                      String?       @db.VarChar(128) @map("cursopgmlog")
  cursoUsuCod                      String?       @db.Char(15) @map("cursousucod")

  empresa                          Empresa @relation(fields: [empresaId], references: [empresaId])
  empresaId                        Int                            @map("empresaid")

  areaConhecimento                 AreaConhecimento? @relation(fields: [areaConhecimentoCodigo, empresaId], references: [areaConhecimentoCodigo, empresaId])
  areaConhecimentoCodigo           Int?                           @map("areaconhecimentocodigo")

  secretariaArredondamento         SecretariaArredondamento? @relation(fields: [empresaId, secretariaArredondamentoId], references: [empresaId, secretariaArredondamentoId])
  secretariaArredondamentoId       Int?                           @map("secretariaarredondamentoid")

  turmas                           Turma[]
  matriculas                       Matricula[]
  matrizesCurriculares             MatrizCurricular[]

  matrizesCurricularesPeriodosDisciplinas MatrizCurricularPeriodoDisciplina[]

  matrizesCurricularesPeriodos     MatrizCurricularPeriodo[]

  @@id([empresaId, cursoCodigo])
  @@map("curso")
}

model MatrizCurricular {
  matrizCurricularStatus                                                                                Boolean?                        @map("matrizcurricularstatus")
  matrizCurricularCodigo                                                                                 Int                            @map("matrizcurriculacodigo")
  matrizCurricularNome                                                                                   String?                                  @db.Char(50) @map("matrizcurricularnome")
  matrizCurricularDataCadastro                                                                           DateTime?                                @db.Date @map("matrizcurriculardatacadastro")
  matrizCurricularVigencia                                                                               DateTime?                                @db.Date @map("matrizcurricularvigencia")
  matrizCurricularCargaHoraria                                                                           Int?                                     @db.SmallInt @map("matrizcurricularcargahoraria")
  matrizCurricularChEstagio                                                                              Int?                                     @db.SmallInt @map("matrizcurricularchestagio")
  matrizCurricularChAtvComp                                                                              Int?                                     @db.SmallInt @map("matrizcurricularchatvcomp")
  matrizCurricularChObrigatoria                                                                          Int?                                     @db.SmallInt @map("matrizcurricularchobrigatoria")
  matrizCurricularChOptativa                                                                             Int?                                     @db.SmallInt @map("matrizcurricularchoptativa")
  matrizCurricularSituacao                                                                               String?                                  @db.VarChar(40) @map("matrizcurricularsituacao")
  matrizCurricularDataAtivacao                                                                           DateTime?                                @db.Date @map("matrizcurriculardataativacao")
  matrizCurricularDataDesativacao                                                                        DateTime?                                @db.Date @map("matrizcurriculardatadesativacao")
  matrizCurricularQtdDiscOpTexpDip                                                                       Int?                                     @db.SmallInt @map("matrizcurricularqtddiscoptexpdip")
  matrizCurricularMesesConclusaoMatriz                                                                   Int?                                     @db.SmallInt @map("matrizcurricularmesesconclusaomatriz")
  matrizCurricularHabilitacao                                                                            String?                                  @db.VarChar(60) @map("matrizcurricularhabilitacao")
  matrizCurricularObservacao                                                                             String?                                  @db.VarChar(255) @map("matrizcurricularobservacao")
  matrizCurricularCompetenciaProfissional                                                                String?                                  @db.VarChar(255) @map("matrizcurricularcompetenciaprofissional")
  matrizCurricularResolucao                                                                              String?                                  @db.VarChar(255) @map("matrizcurricularresolucao")
  matrizCurricularSistemaAvaliacao                                                                       String?                                  @db.VarChar(255) @map("matrizcurricularsistemaavaliacao")
  matrizCurricularCursoPeriodicidade                                                                     Int?                           @map("matrizcurricularcursoperiodicidade")
  matrizCurricularQuantidadePeriodo                                                                      Int?                                     @db.SmallInt @map("matrizcurricularquantidadeperiodo")
  matrizCurricularFinalizada                                                                             Boolean?                        @map("matrizcurricularfinalizada")

  empresa                          Empresa @relation(fields: [empresaId], references: [empresaId])
  empresaId                        Int                            @map("empresaid")

  curso                            Curso? @relation(fields: [empresaId, cursoCodigo], references: [empresaId, cursoCodigo])
  cursoCodigo                      Int                         @map("cursocodigo")

  participanteAtivacao             Participante? @relation("ParticipanteAtivacao", fields: [empresaId, matrizCurricularResponsavelAtivacao], references: [empresaId, participanteCodigo])
  matrizCurricularResponsavelAtivacao Int?                      @map("matrizcurricularresponsavelativacao")

  participanteDesativacao          Participante? @relation("ParticipanteDesativacao", fields: [empresaId, matrizCurricularResponsavelDesativacao], references: [empresaId, participanteCodigo])
  matrizCurricularResponsavelDesativacao Int?                   @map("matrizcurricularresponsaveldesativacao")

  turmas                           Turma[]

  matrizesCurricularesPeriodos      MatrizCurricularPeriodo[]

  matrizesCurricularesPeriodosDisciplinas MatrizCurricularPeriodoDisciplina[]

  @@id([empresaId, cursoCodigo, matrizCurricularCodigo])
  @@map("matrizcurricular")
}

model PeriodoEscolar {
  periodoEscolarId                                                                                            Int                            @map("periodoescolarid")
  periodoEscolarNome                                                                                          String?                        @unique(map: "uperiodoescolar") @db.Char(50) @map("periodoescolarnome")
  periodoEscolarDataInicial                                                                                   DateTime?                      @db.Date @map("periodoescolardatainicial")
  periodoEscolarDataFinal                                                                                     DateTime?                      @db.Date @map("periodoescolardatafinal")
  periodoEscolarModalidade                                                                                    String?                        @db.VarChar(40) @map("periodoescolarmodalidade")
  periodoEscolarAnoCompetencia                                                                                Int?                           @map("periodoescolaranocompetencia")
  periodoEscolarMesCompetencia                                                                                Int?                           @map("periodoescolarmescompetencia")
  periodoEscolarMesCompetenciaFinal                                                                           Int?                           @db.SmallInt @map("periodoescolarmescompetenciafinal")
  periodoEscolarAnoCompetenciaFinal                                                                           Int?                           @db.SmallInt @map("periodoescolaranocompetenciafinal")
  periodoEscolarPgmLog                                                                                        String?                        @db.VarChar(128) @map("periodoescolarpgmlog")
  periodoEscolarUsuCod                                                                                        String?                        @db.Char(15) @map("periodoescolarusucod")
  periodoEscolarDtaLog                                                                                        DateTime?                      @db.Timestamp(6) @map("periodoescolardtalog")

  empresa                          Empresa @relation(fields: [empresaId], references: [empresaId])
  empresaId                        Int                            @map("empresaid")

  turmas                           Turma[]
  matriculaPeriodoEscolares        MatriculaPeriodoEscolar[]

  @@id([empresaId, periodoEscolarId])
  @@map("periodoescolar")
}

model Turno {
  turnoCodigo                  Int                            @map("turnocodigo")
  turnoDescricaoContrato       String?       @db.VarChar(256) @map("turnodescricaocontrato")
  turnoTipoHorario             String?       @db.Char(20) @map("turnotipohorario")
  turnoHoraAulaSessentaMinutos Boolean?                       @map("turnohoraaulasessentaminutos")
  turnoHorarioVisaoAluno       Boolean?                       @map("turnohorariovisaoaluno")
  turnoHorarioVisaoProfessor   Boolean?                       @map("turnohorariovisaoprofessor")
  turnoNome                    String?       @unique(map: "uturno") @db.Char(50) @map("turnonome")

  empresa                      Empresa @relation(fields: [empresaId], references: [empresaId])
  empresaId                    Int                            @map("empresaid")

  turmas                       Turma[]

  @@id([empresaId, turnoCodigo])
  @@map("turno")
}

model Turma {
  turmaCodigo                                                       Int                            @map("turmacodigo")
  turmaId                                                           String?                      @db.VarChar(60) @map("turmaid")
  turmaDigito                                                       String?                      @db.Char(1) @map("turmadigito")
  turmaSala                                                         String?                      @db.Char(40) @map("turmasala")
  turmaSituacao                                                     String?                      @db.VarChar(10) @map("turmasituacao")
  turmaPeriodoLetivo                                                String?                      @db.VarChar(40) @map("turmaperiodoletivo")
  turmaNumeroVagas                                                  Decimal?                     @db.Decimal(7, 1) @map("turmanumerovagas")
  turmaNumeroMinMatricula                                           Int?                         @db.SmallInt @map("turmanumerominmatricula")
  turmaNumeroMaximo                                                 Int?                         @db.SmallInt @map("turmanumeromaximo")
  turmaNumeroReposicao                                              Int?                         @db.SmallInt @map("turmanumeroreposicao")
  turmaAtivo                                                        Boolean?                       @map("turmaativo")
  turmaPgmLog                                                       String?                      @db.VarChar(128) @map("turmapgmlog")
  turmaUsuCod                                                       String?                      @db.Char(15) @map("turmausucod")
  turmaDtaLog                                                       DateTime?                    @db.Timestamp(6) @map("turmadtalog")

  empresa                                                           Empresa @relation(fields: [empresaId], references: [empresaId])
  empresaId                                                         Int                            @map("empresaid")

  curso                                                             Curso? @relation(fields: [empresaId, cursoCodigo], references: [empresaId, cursoCodigo])
  cursoCodigo                                                       Int                         @map("cursocodigo")

  matrizCurricular                                                  MatrizCurricular? @relation(fields: [empresaId, cursoCodigo, turmaMatrizCurricular], references: [empresaId, cursoCodigo, matrizCurricularCodigo])
  turmaMatrizCurricular                                             Int?                           @map("turmamatrizcurricular")

  turno                                                             Turno? @relation(fields: [empresaId, turmaTurno], references: [empresaId, turnoCodigo])
  turmaTurno                                                        Int?                           @map("turmaturno")

  periodoEscolar                                                    PeriodoEscolar? @relation(fields: [turmaPeriodoEmpresaId, turmaPeriodoEscolarId], references: [empresaId, periodoEscolarId])
  turmaPeriodoEmpresaId                                             Int?                           @map("turmaperiodoempresaid")
  turmaPeriodoEscolarId                                             Int?                           @map("turmaperiodoescolarid")

  matriculas                                                        Matricula[]

  @@id([empresaId, turmaCodigo, cursoCodigo])
  @@index([empresaId, cursoCodigo, turmaMatrizCurricular], map: "iturma1")
  @@index([empresaId, cursoCodigo, turmaTurno], map: "iturma2")
  @@index([turmaPeriodoEmpresaId, cursoCodigo], map: "iturma5")
  @@index([turmaPeriodoEmpresaId, turmaPeriodoEscolarId], map: "iturma6")
  @@map("turma")
}

model PolSegNro {
  empresaDataVigenciaSeg     DateTime @db.Timestamp(6) @map("empresadatavigenciaseg")
  empresaTipoPoliticaSeg     Int      @db.SmallInt @map("empresatipopoliticaseg")
  empresaAutenticaWindowsSeg Int      @db.SmallInt @map("empresaautenticawindowsseg")
  usuarioSeg                 String   @db.Char(15) @map("usuarioseg")

  empresa                    Empresa @relation(fields: [empresaId], references: [empresaId])
  empresaId                  Int                            @map("empresaid")

  @@id([empresaId, empresaDataVigenciaSeg, empresaTipoPoliticaSeg])
  @@map("polsegnro")
}

model SecUserPass {
  secUserPassData DateTime @db.Timestamp(6) @map("secuserpassdata")
  secUserPassReg  String   @db.VarChar(100) @map("secuserpassreg")

  secuser         SecUser @relation(fields: [secUserId], references: [secUserId])
  secUserId       Int                            @map("secuserid")

  @@id([secUserId, secUserPassData])
  @@map("secuserpass")
}

model MatriculaPeriodoEscolar {
  matriculaPeriodoStatus        String?        @db.Char(1) @map("matriculaperiodostatus")

  empresa                       Empresa @relation(fields: [empresaId], references: [empresaId])
  empresaId                     Int                            @map("empresaid")

  matricula                     Matricula      @relation(fields: [empresaId, matriculaCodigo], references: [empresaId, matriculaCodigo])
  matriculaCodigo               String         @db.Char(15) @map("matriculacodigo")

  periodoEscolar                PeriodoEscolar @relation(fields: [empresaId, matriculaPeriodoEscolarId], references: [empresaId, periodoEscolarId])
  matriculaPeriodoEscolarId     Int                            @map("matriculaperiodoescolarid")

  @@id([empresaId, matriculaCodigo, matriculaPeriodoEscolarId])
  @@index([empresaId, matriculaPeriodoEscolarId], map: "imatriculaperiodo3")
  @@map("matriculaperiodoescolar")
}

model GrupoEmpresa {
  grupoEmpresaId        Int                   @id @default(autoincrement()) @map("grupoempresaid")
  grupoEmpresaDesc      String                @db.VarChar(100) @map("grupoempresadesc")
  grupoEmpresaAtivo     Boolean                        @map("grupoempresaativo")
  grupoEmpresaPrincipal Boolean                        @map("grupoempresaprincipal")

  grupoEmpresaEmpresas   GrupoEmpresaEmpresa[]

  @@map("grupoempresa")
}

model GrupoEmpresaEmpresa {
  empresaPrincipal       Boolean                        @map("empresaprincipal")
  empresaContabilizadora Boolean                        @map("empresacontabilizadora")

  empresa                Empresa      @relation(fields: [empresaId], references: [empresaId])
  empresaId              Int                            @map("empresaid")

  grupoEmpresa           GrupoEmpresa @relation(fields: [grupoEmpresaId], references: [grupoEmpresaId])
  grupoEmpresaId         Int                            @map("grupoempresaid")

  @@id([grupoEmpresaId, empresaId])
  @@map("grupoempresaempresa")
}

model UsuOco {
  usuCod    String   @db.VarChar(100) @map("usucod")
  usuDtaOco DateTime @db.Timestamp(6) @map("usudtaoco")
  usuTipoOco String   @db.Char(2) @map("usutipoco")
  usuMenOco String?  @db.Char(100) @map("usumenoco")
  usuCodDes String?  @db.Char(15) @map("usucoddes")
  usuOcoTst String?  @db.VarChar(1) @map("usuocotst")

  @@id([usuCod, usuDtaOco, usuTipoOco])
  @@index([usuCod, usuDtaOco(sort: Desc)], map: "uusua083")
  @@map("usuoco")
}

model SecParticipante {
  secuser            SecUser      @relation(fields: [secUserId], references: [secUserId])
  secUserId          Int                            @map("secuserid")

  participante       Participante @relation(fields: [empresaId, participanteCodigo], references: [empresaId, participanteCodigo])

  empresa                Empresa      @relation(fields: [empresaId], references: [empresaId])
  empresaId          Int                            @map("empresaid")
  participanteCodigo Int                         @map("participantecodigo")

  @@id([empresaId, participanteCodigo, secUserId])
  @@index([secUserId], map: "isecparticipante1")
  @@map("secparticipante")
}

model ParticipanteFilialEndereco {
  participanteFilialEnderecoSequencia         Int                                           @db.SmallInt @map("participantefilialenderecosequencia")
  participanteFilialEnderecoTipo              String?                                       @db.Char(15) @map("participantefilialenderecotipo")
  participanteFilialEnderecoCep               String?                                       @db.Char(8) @map("participantefilialenderecocep")
  participanteFilialEnderecoLogradouro        String?                                       @db.VarChar(100) @map("participantefilialenderecologradouro")
  participanteFilialEnderecoNumero            String?                                       @db.Char(10) @map("participantefilialendereconumero")
  participanteFilialEnderecoComplemento       String?                                       @db.Char(60) @map("participantefilialenderecocomplemento")
  participanteFilialEnderecoBairro            String?                                       @db.Char(60) @map("participantefilialenderecobairro")
  participanteFilialEnderecoInscricaoEstadual String?                                       @db.Char(18) @map("participantefilialenderecoinscricaoestadual")
  participanteFilialEnderecoCnpj              BigInt?                                       @map("participantefilialenderecocnpj")
  participanteFilialEnderecoUsuarioLog        String?                                       @db.Char(15) @map("participantefilialenderecousuariolog")
  participanteFilialEnderecoPgmLog            String?                                       @db.Char(128) @map("participantefilialenderecopgmlog")
  participanteFilialEnderecoDataLog           DateTime?                                     @db.Timestamp(6) @map("participantefilialenderecodatalog")
  participanteFilialEnderecoStatus            Boolean?                                      @map("participantefilialenderecostatus")

  empresa                                     Empresa                                       @relation(fields: [empresaId], references: [empresaId])
  empresaId                                   Int                                           @map("empresaid")

  participanteFilial                          ParticipanteFilial                            @relation(fields: [empresaId, participanteCodigo, participanteFilialCodigo], references: [empresaId, participanteCodigo, participanteFilialCodigo])
  participanteCodigo                          Int                                           @map("participantecodigo")
  participanteFilialCodigo                    Int                                           @db.SmallInt @map("participantefilialcodigo")
  
  municipio                                   Muncadf?                                      @relation(fields: [municipioCodigo], references: [mufCod])
  municipioCodigo                             Int?                                          @map("municipiocodigo")
  
  estado                                      Estado01?                                      @relation(fields: [unidadeFederativaCodigo], references: [estCod])
  unidadeFederativaCodigo                     String?                                       @db.Char(2) @map("unidadefederativacodigo")

  pais                                        Paises01?                                     @relation(fields: [paisCodigo], references: [paiCod])
  paisCodigo                                  Int?                                          @db.SmallInt @map("paiscodigo")

  relacionamento                              Relacionamento @relation(fields: [empresaId, participanteCodigo, participanteFilialCodigo, relacionamentoCodigo], references: [empresaId, participanteCodigo, participanteFilialCodigo, relacionamentoCodigo], onDelete: NoAction, onUpdate: NoAction, map: "iparticipantecontatoeletronico2")
  relacionamentoCodigo                               String                         @db.Char(15) @map("relacionamentocodigo")
  
  contatosEletronicos                         ParticipanteFilialEnderecoContatoEletronico[]

  participantesFiliasEnderecosContatosTelefones ParticipanteFilialEnderecoContatoTelefone[]

  @@id([empresaId, participanteCodigo, participanteFilialCodigo, relacionamentoCodigo, participanteFilialEnderecoSequencia])
  @@index([municipioCodigo], map: "iparticipantefilialendereco1")
  @@index([unidadeFederativaCodigo], map: "iparticipantefilialendereco2")
  @@index([paisCodigo], map: "iparticipantefilialendereco3")
  @@map("participantefilialendereco")
}

model Paises01 {
  paiCod                     Int                          @id @db.SmallInt @map("paicod")
  paiNom                     String?                      @db.Char(40) @map("painom")
  paiSigla                   String?                      @db.Char(3) @map("paisigla")
  ddiCod                     Int?                         @db.SmallInt @map("ddicod")
  paiIsWeb                   String?                      @db.VarChar(1) @map("paisisweb")
  paiSts                     String?                      @db.Char(1) @map("paists")
  paiNacionalidade           String?                      @db.VarChar(40) @map("painacionalidade")

  participanteFilialEndereco ParticipanteFilialEndereco[]

  @@map("paises01")
}

model Estado01 {
  estCod                                  String                       @id @db.Char(2) @map("estcod")
  estNom                                  String?                      @db.Char(40) @map("estnom")
  estCodUf                                Int?                         @db.SmallInt @map("estcoduf")
  estFlgZfm                               String?                      @db.Char(1) @map("estflgzfm")
  estGeoCod                               String?                      @db.Char(2) @map("estgeocod")
  estFisCod                               String?                      @db.Char(2) @map("estfiscod")
  estCodCen                               Int?                         @db.SmallInt @map("estcodcen")

  participanteFilialEndereco              ParticipanteFilialEndereco[]

  @@index([estFisCod], map: "iesta012")
  @@index([estGeoCod], map: "iesta013")

  @@map("estado01")
}

model ParticipanteFilialEnderecoContatoEletronico {
  
  participanteFilialEnderecoSequencia                Int                            @db.SmallInt @map("participantefilialenderecosequencia")
  participanteFilialEnderecoContatoSequencia         Int                            @db.SmallInt @map("participantefilialenderecocontatosequencia")
  participanteFilialEnderecoContatoEletronicoCodigo  Int                            @db.SmallInt @map("participantefilialenderecocontatoeletronicocodigo")
  participanteFilialEnderecoContatoEletronicoTipo    String?                        @db.VarChar(20) @map("participantefilialenderecocontatoeletronicotipo")
  participanteFilialEnderecoContatoEletronicoDescric String?                        @db.VarChar(255) @map("participantefilialenderecocontatoeletronicodescric")
  participanteFilialEnderecoContatoEletronicoUsuLog  String?                        @db.Char(15) @map("participantefilialenderecocontatoeletronicousulog")
  participanteFilialEnderecoContatoEletronicoPgmLog  String?                        @db.Char(128) @map("participantefilialenderecocontatoeletronicopgmlog")
  participanteFilialEnderecoContatoEletronicoDtaLog  DateTime?                      @db.Timestamp(6) @map("participantefilialenderecocontatoeletronicodtalog")
  participanteFilialEnderecoContatoEletronicoMain    Boolean?                       @map("participantefilialenderecocontatoeletronicomain")
  participanteFilialEnderecoContatoEletronicoStatus  Boolean?                       @map("participantefilialenderecocontatoeletronicostatus")

  empresa                                     Empresa                                       @relation(fields: [empresaId], references: [empresaId])
  empresaId                                   Int                                           @map("empresaid")

  participanteFilial                          ParticipanteFilial                            @relation(fields: [empresaId, participanteCodigo, participanteFilialCodigo], references: [empresaId, participanteCodigo, participanteFilialCodigo])
  participanteCodigo                          Int                                           @map("participantecodigo")
  participanteFilialCodigo                    Int                                           @db.SmallInt @map("participantefilialcodigo")
  
  participanteFilialEndereco                  ParticipanteFilialEndereco @relation(fields: [relacionamentoCodigo, empresaId, participanteFilialEnderecoSequencia, participanteFilialCodigo, participanteCodigo], references: [relacionamentoCodigo, empresaId, participanteFilialEnderecoSequencia, participanteFilialCodigo, participanteCodigo], onDelete: NoAction, onUpdate: NoAction, map: "iparticipantecontatoeletronico1")

  relacionamento                              Relacionamento @relation(fields: [empresaId, participanteCodigo, participanteFilialCodigo, relacionamentoCodigo], references: [empresaId, participanteCodigo, participanteFilialCodigo, relacionamentoCodigo], onDelete: NoAction, onUpdate: NoAction, map: "iparticipantecontatoeletronico2")
  relacionamentoCodigo                               String                         @db.Char(15) @map("relacionamentocodigo")

  @@id([empresaId, participanteCodigo, participanteFilialCodigo, relacionamentoCodigo, participanteFilialEnderecoSequencia, participanteFilialEnderecoContatoSequencia, participanteFilialEnderecoContatoEletronicoCodigo])
  @@map("participantefilialenderecocontatoeletronico")
}

model Relacionamento {
  relacionamentoCodigo     String                         @db.Char(15) @map("relacionamentocodigo")
  relacionamentoStatus     Boolean?                       @map("relacionamentostatus")
  relacionamentoPgmLog     String?                        @db.VarChar(128) @map("relacionamentopgmlog")
  relacionamentoUsuCod     String?                        @db.Char(15) @map("relacionamentousucod")
  relacionamentoDataLog    DateTime?                      @db.Timestamp(6) @map("relacionamentodatalog")
  relacionamentoCodigoInep String?                        @db.Char(8) @map("relacionamentocodigoinep")

  empresa                                     Empresa                                       @relation(fields: [empresaId], references: [empresaId])
  empresaId                                   Int                                           @map("empresaid")

  participanteFilial       ParticipanteFilial @relation(fields: [empresaId, participanteCodigo, participanteFilialCodigo], references: [empresaId, participanteCodigo, participanteFilialCodigo], onDelete: NoAction, onUpdate: NoAction, map: "irelacionamento1")
  participanteCodigo       Int                         @map("participantecodigo")
  participanteFilialCodigo Int                            @db.SmallInt @map("participantefilialcodigo")

  contatosEletronicos      ParticipanteFilialEnderecoContatoEletronico[]
  enderecos                ParticipanteFilialEndereco[]
  participantesFiliaisEnderecosContatosTelefones ParticipanteFilialEnderecoContatoTelefone[]

  @@id([empresaId, participanteCodigo, participanteFilialCodigo, relacionamentoCodigo])
  @@map("relacionamento")
}

model ParticipanteFilialEnderecoContatoTelefone {
  participanteFilialEnderecoContatoTelefoneSequencia Int                            @db.SmallInt @map("participantefilialenderecocontatotelefonesequencia")
  participanteFilialEnderecoContatoTelefoneCodigo    Int                            @map("participantefilialenderecocontatotelefonecodigo")
  participanteFilialEnderecoContatoTelefoneTipo      String?                        @db.Char(20) @map("participantefilialenderecocontatotelefonetipo")
  participanteFilialEnderecoContatoTelefoneDdi       Int?                           @db.SmallInt @map("participantefilialenderecocontatotelefoneddi")
  participanteFilialEnderecoContatoTelefoneDdd       Int?                           @db.SmallInt @map("participantefilialenderecocontatotelefoneddd")
  participanteFilialEnderecoContatoTelefoneNumero    BigInt?                        @map("participantefilialenderecocontatotelefonenumero")
  participanteFilialEnderecoContatoTelefoneRamal     Int?                           @map("participantefilialenderecocontatotelefoneramal")
  participanteFilialEnderecoContatoTelefonePgmLog    String?                        @db.Char(20) @map("participantefilialenderecocontatotelefonepgmlog")
  participanteFilialEnderecoContatoTelefoneUsuLog    String?                        @db.Char(20) @map("participantefilialenderecocontatotelefoneusulog")
  participanteFilialEnderecoContatoTelefoneDataLog   DateTime?                      @db.Timestamp(6) @map("participantefilialenderecocontatotelefonedatalog")
  participanteFilialEnderecoContatoTelefoneMain      Boolean?                       @map("participantefilialenderecocontatotelefonemain")
  participanteFilialEnderecoContatoTelefoneStatus    Boolean?                       @map("participantefilialenderecocontatotelefonestatus")


  empresa                                            Empresa                        @relation(fields: [empresaId], references: [empresaId])
  empresaId                                          Int                            @map("empresaid")

  participanteFilial                                 ParticipanteFilial @relation(fields: [empresaId, participanteCodigo, participanteFilialCodigo], references: [empresaId, participanteCodigo, participanteFilialCodigo], onDelete: NoAction, onUpdate: NoAction, map: "iparticipantefilialenderecocontatotelefone2")
  participanteCodigo                                 Int                            @map("participantecodigo")
  participanteFilialCodigo                           Int                            @db.SmallInt @map("participantefilialcodigo")


  participanteFilialEndereco                         ParticipanteFilialEndereco @relation(fields: [relacionamentoCodigo, empresaId, participanteFilialEnderecoSequencia, participanteFilialCodigo, participanteCodigo], references: [relacionamentoCodigo, empresaId, participanteFilialEnderecoSequencia, participanteFilialCodigo, participanteCodigo], onDelete: NoAction, onUpdate: NoAction, map: "iparticipantefilialenderecocontatotelefone1")
  participanteFilialEnderecoSequencia                Int                            @db.SmallInt @map("participantefilialenderecosequencia")

  Relacionamento                                     Relacionamento @relation(fields: [empresaId, participanteCodigo, participanteFilialCodigo, relacionamentoCodigo], references: [empresaId, participanteCodigo, participanteFilialCodigo, relacionamentoCodigo], onDelete: NoAction, onUpdate: NoAction, map: "iparticipantefilialenderecocontatotelefone3")
  relacionamentoCodigo                               String                         @db.Char(15) @map("relacionamentocodigo")
  
  @@id([empresaId, participanteCodigo, participanteFilialCodigo, relacionamentoCodigo, participanteFilialEnderecoSequencia, participanteFilialEnderecoContatoTelefoneSequencia, participanteFilialEnderecoContatoTelefoneCodigo])
  @@map("participantefilialenderecocontatotelefone")
}


model ParticipanteRelacao {
  participanteRelacao               String?                        @db.VarChar(40) @map("participanterelacao")
  participanteResponsavelStatus     Boolean?                       @map("participanteresponsavelstatus")
  participanteRelacaoPgmLog         String?                        @db.VarChar(128) @map("participanterelacaopgmlog")
  participanteRelacaoUsuCod         String?                        @db.Char(15) @map("participanterelacaousucod")
  participanteRelacaoDtaLog         DateTime?                      @db.Timestamp(6) @map("participanterelacaodtalog")

  empresa                           Empresa                        @relation("empresaRelacao1", fields: [empresaId], references: [empresaId])
  empresaId                         Int                            @map("empresaid")
  
  empresaParticipanteRelacao        Empresa                        @relation("empresaRelacao2", fields: [participanteRelacaoEmpresaId], references: [empresaId])
  participanteRelacaoEmpresaId      Int                            @map("participanterelacaoempresaid")

  participanteFilial                ParticipanteFilial             @relation("ParticipanteRelacao1", fields: [empresaId, participanteCodigo, participanteFilialCodigo], references: [empresaId, participanteCodigo, participanteFilialCodigo], onDelete: NoAction, onUpdate: NoAction, map: "iparticipanterelacao1")
  participanteCodigo                Int                            @map("participantecodigo")
  participanteFilialCodigo          Int                            @db.SmallInt @map("participantefilialcodigo")
  
  participanteFilialRelacao         ParticipanteFilial             @relation("ParticipanteRelacao2", fields: [participanteRelacaoEmpresaId, participanteRelacaoCodigo, participanteRelacaoFilialCodigo], references: [empresaId, participanteCodigo, participanteFilialCodigo], onDelete: NoAction, onUpdate: NoAction, map: "iparticipanterelacao2")
  participanteRelacaoCodigo         Int                            @map("participanterelacaocodigo")
  participanteRelacaoFilialCodigo   Int                            @db.SmallInt @map("participanterelacaofilialcodigo")

  @@id([empresaId, participanteCodigo, participanteFilialCodigo, participanteRelacaoEmpresaId, participanteRelacaoCodigo, participanteRelacaoFilialCodigo])
  @@index([participanteRelacaoEmpresaId, participanteRelacaoCodigo, participanteRelacaoFilialCodigo], map: "iparticipanterelacao_unique")
  @@map("participanterelacao")
}

model Disciplina {
  
  disciplinaCodigo                                                         Int                            @map("disciplinacodigo")
  disciplinaNome                                                           String?                        @db.VarChar(100) @map("disciplinanome")
  disciplinaNivelEducacional                                               String?                        @db.VarChar(40) @map("disciplinaniveleducacional")
  disciplinaDescricaoComplementar                                          String?                        @db.VarChar(100) @map("disciplinadescricaocomplementar")
  disciplinaAbreviatura                                                    String?                        @db.VarChar(60) @map("disciplinaabreviatura")
  disciplinaMinPercentualCargaHorariaAproveitamento                        Decimal?                       @db.Decimal(10, 4) @map("disciplinaminpercentualcargahorariaaproveitamento")
  disciplinaMinAnosAproveitamento                                          Decimal?                       @db.Decimal(3, 2) @map("disciplinaminanosaproveitamento")
  disciplinaAtiva                                                          Boolean?                       @map("disciplinaativa")
  disciplinaPgmLog                                                         String?                        @db.VarChar(128) @map("disciplinapgmlog")
  disciplinaUsuCod                                                         String?                        @db.Char(15) @map("disciplinausucod")
  disciplinaDtaLog                                                         DateTime?                      @db.Timestamp(6) @map("disciplinadtalog")
  
  empresa                                                                  Empresa                        @relation(fields: [empresaId], references: [empresaId])
  empresaId                                                                Int                            @map("empresaid")

  matriculasDisciplinas                                                   MatriculaDisciplina[]

  frequencia                                                              MatriculaDisciplinaFrequencia[]
  @@id([empresaId, disciplinaCodigo])
  @@index([disciplinaNome], map: "disciplina_disciplinanome_asc")
  @@map("disciplina")
}

model MatriculaDisciplina {
  matriculaDisciplinaSeq                  Int                                       @default(0) @db.SmallInt @map("matriculadisciplinaseq")
  matriculaDisciplinaPeriodo              String?                                   @db.VarChar(40) @map("matriculadisciplinaperiodo")
  matriculaDisciplinaStatus               String?                                   @db.VarChar(1) @map("matriculadisciplinastatus")
  matriculaDisciplinaCargaHor             Int?                                      @db.SmallInt @map("matriculadisciplinacargahor")
  matriculaDisciplinaMediaFinal           Decimal?                                  @db.Decimal(4, 2) @map("matriculadisciplinamediafinal")
  matriculaDisciplinaRevisarDp            Boolean?                                  @map("matriculadisciplinarevisardp")
  matriculaDisciplinaIsDp                 Boolean?                                  @map("matriculadisciplinaisdp")
  matriculaDisciplinaMetodoVig            DateTime?                                 @db.Timestamp(6) @map("matriculadisciplinametodovig")
  matriculaDisciplinaTurma                Int?                                      @map("matriculadisciplinaturma")
  matriculaDisciplinaCursoCodigo          Int?                                      @map("matriculadisciplinacursocodigo")
  matDisciplinaPeriodoEscolarId           Decimal?                                  @db.Decimal(9, 0) @map("matdisciplinaperiodoescolarid")
  
  empresa                                 Empresa                                   @relation(fields: [empresaId], references: [empresaId])
  empresaId                               Int                                       @map("empresaid")

  matricula                               Matricula                                 @relation(fields: [empresaId, matriculaCodigo], references: [empresaId, matriculaCodigo])
  matriculaCodigo                         String                                    @db.Char(15) @map("matriculacodigo")

  disciplina                              Disciplina                                @relation(fields: [empresaId, disciplinaCodigo], references: [empresaId, disciplinaCodigo]) 
  disciplinaCodigo                        Int                                       @map("disciplinacodigo")

  frequencia                  MatriculaDisciplinaFrequencia[]

  @@id([empresaId, matriculaCodigo, disciplinaCodigo, matriculaDisciplinaSeq])
  @@index([empresaId, disciplinaCodigo], map: "imatriculadisciplina1")
  @@index([empresaId, disciplinaCodigo], map: "iparticipantematriculadisciplina1")
  @@map("matriculadisciplina")
}

model MatrizCurricularPeriodo {
  matrizCurricularPeriodo          String          @db.VarChar(40) @map("matrizcurricularperiodo")
  matrizCurricularPeriodoAtivo     Boolean?                       @map("matrizcurricularperiodoativo")
  matrizCurricularPeriodoCarOpt    Int?                           @map("matrizcurricularperiodocaropt")

  empresa                          Empresa @relation(fields: [empresaId], references: [empresaId])
  empresaId                        Int                            @map("empresaid")

  curso                            Curso @relation(fields: [empresaId, cursoCodigo], references: [empresaId, cursoCodigo])
  cursoCodigo                      Int                            @map("cursocodigo")

  matrizCurricular                 MatrizCurricular @relation(fields: [empresaId, matrizCurricularCodigo, cursoCodigo], references: [empresaId, matrizCurricularCodigo, cursoCodigo], onDelete: NoAction, onUpdate: NoAction)
  matrizCurricularCodigo           Int                            @map("matrizcurriculacodigo")

  matrizCurricularPeriodoDisciplinas MatrizCurricularPeriodoDisciplina[]

  @@id([empresaId, cursoCodigo, matrizCurricularCodigo, matrizCurricularPeriodo])
  @@map("matrizcurricularperiodo")
}



model MatrizCurricularPeriodoDisciplina {
  disciplinaCodigo                         Int                            @map("disciplinacodigo")
  matrizCurricularPeriodoDisciplinaCargaHorariaTotal Int?                 @db.SmallInt @map("matrizcurricularperiododisciplinacargahorariatotal")
  matrizCurricularPeriodoDisciplinaCargaHorariaPrati Int?                 @db.SmallInt @map("matrizcurricularperiododisciplinacargahorariaprati")
  matrizCurricularPeriodoDisciplinaOptativa Boolean?                      @map("matrizcurricularperiododisciplinaoptativa")


  empresa                                  Empresa @relation(fields: [empresaId], references: [empresaId])
  empresaId                                Int                            @map("empresaid")

  curso                                    Curso @relation(fields: [empresaId, cursoCodigo], references: [empresaId, cursoCodigo])
  cursoCodigo                              Int                            @map("cursocodigo")

  matrizCurricular                         MatrizCurricular @relation(fields: [empresaId, cursoCodigo, matrizCurricularCodigo], references: [empresaId, cursoCodigo, matrizCurricularCodigo], map: "imatrizcurricularperiododisciplina3")
  matrizCurricularCodigo                   Int                            @map("matrizcurriculacodigo")

  matrizCurricularPeriodoRelation          MatrizCurricularPeriodo @relation(fields: [empresaId, cursoCodigo, matrizCurricularCodigo, matrizCurricularPeriodo], references: [empresaId, cursoCodigo, matrizCurricularCodigo, matrizCurricularPeriodo])
  matrizCurricularPeriodo                  String                         @db.VarChar(40) @map("matrizcurricularperiodo")

  @@id([empresaId, cursoCodigo, matrizCurricularCodigo, matrizCurricularPeriodo, disciplinaCodigo])
  @@index([empresaId, disciplinaCodigo], map: "imatrizcurricularperiododisciplina1")
  @@map("matrizcurricularperiododisciplina")
}

model MatriculaDisciplinaFrequencia {
  matriculaDisciplinaFreqData              DateTime                       @db.Timestamp(6) @map("matriculadisciplinafreqdata")
  matriculaDisciplinaFreqPresente          Boolean?                       @map("matriculadisciplinafreqpresente")
  matriculaDisciplinaFreqPgmLog            String?                        @db.Char(128) @map("matriculadisciplinafreqpgmlog")
  matriculaDisciplinaFreqUsuLog            String?                        @db.Char(15) @map("matriculadisciplinafrequsulog")
  matriculaDisciplinaFreqDtaLog            DateTime?                      @db.Timestamp(6) @map("matriculadisciplinafreqdtalog")

  empresa                                  Empresa @relation(fields : [empresaId], references: [empresaId])
  empresaId                                Int                            @map("empresaid")

  matricula                                Matricula @relation(fields: [empresaId, matriculaCodigo], references: [empresaId, matriculaCodigo])
  matriculaCodigo                          String                         @db.Char(15) @map("matriculacodigo")

  disciplina                               Disciplina @relation(fields: [empresaId, disciplinaCodigo], references: [empresaId, disciplinaCodigo])
  disciplinaCodigo                         Int                            @map("disciplinacodigo")

  matriculaDisciplina                      MatriculaDisciplina @relation(fields: [empresaId, matriculaCodigo, disciplinaCodigo, matriculaDisciplinaSeq], references: [empresaId, matriculaCodigo, disciplinaCodigo, matriculaDisciplinaSeq])
  matriculaDisciplinaSeq                   Int                         @map("matriculadisciplinaseq")

  @@id([empresaId, matriculaCodigo, disciplinaCodigo, matriculaDisciplinaSeq, matriculaDisciplinaFreqData])
  @@map("matriculadisciplinafrequencia")
}
